$imgDir:"../img";
$width:"50%";

#main{
  /** 変数を使うことができる **/
  width:$width;
  background:url("#{$imgDir}bg.png");
  
  p{
    /** 数式を使える  **/
    font-size:#{12+12}px;
  }
}

$debugMode:true;
$x:10;

/** 条件分岐 **/
#main2{
  @if $debugMode == true{
    color:red;
  } @else {
    color:green;
  }
  
  p{
    @if $x > 10 {
      color:yellow;
    }
  }

}

/**ループ  **/
$i:10;
$i2:10;
#main3{
  /**10から14まで **/
  /** 変数を文字で使うときは **/
  /** 下記のような記法をインターポーションという**/
  @for $i from 10 through 14 {
    .fs_#{$i} {font-size: #{$i}px;}
  }

  @while $i2 <= 14 {
    .fs_#{$i2} {font-size: #{$i2}px;}
    $i2:$i2+1;
  }
}

/**配列 **/
$animals: cat,dog,tiger;

@each $animal in $animals{
  /** 最初の#はidの# **/
  ##{$animal}_icon {background:url("#{$animal}.png");}
}


/** 関数 a**/
$totalWidth:940px;
$columnCount:10;
@function getColumnWidth($width, $count){
    $padding:10px;
    $columnWidth:floor( ($width) - $padding*($count) / $count );
    /** debugはコンソールに出力をする **/
    /** @debug $columnWidth **/;
    @return $columnWidth;
}

.grid{
  float:left;
  width:getColumnWidth($totalWidth, $columnCount);
}

/** mixin テンプレート的な機能 **/

@mixin round-btn($radius:4px) {
  border: 1px solid #b8b8b8;
  border-radius:5px;
  background-color:#c9c9c9x;
}

@mixin auto-color($color) {
  @include round-btn;
  color:$color;
}

.btn-blue{
   @include auto-color(blue);
}

.btn-red{
  @include auto-color(red);
}

/** 継承  **/

#main4{
  background-color:red;
  color:gray;
}

#main5{
  @extend #main4;
  border:1px solid white;
}
